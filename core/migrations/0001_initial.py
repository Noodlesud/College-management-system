# Generated by Django 4.2 on 2024-09-18 20:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("teacher", "Teacher"),
                            ("registrar", "Registrar"),
                            ("department_head", "Department Head"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="custom_user_set",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="custom_user_set",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Assessment_holding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("teacher", models.CharField(max_length=20)),
                ("course_code", models.CharField(max_length=50)),
                ("assigned_class", models.CharField(max_length=50)),
                ("assessment_data", models.CharField(max_length=255)),
                ("date_enrolled", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="College",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "code",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "year",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Year 1"),
                            (2, "Year 2"),
                            (3, "Year 3"),
                            (4, "Year 4"),
                            (5, "Year 5"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "semester",
                    models.PositiveIntegerField(
                        choices=[(1, "Semester 1"), (2, "Semester 2")], default=1
                    ),
                ),
                ("credits", models.PositiveIntegerField(default=3)),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "college",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.college"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=50, null=True)),
                ("last_name", models.CharField(max_length=50, null=True)),
                ("id_number", models.CharField(max_length=20, null=True, unique=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")],
                        max_length=6,
                        null=True,
                    ),
                ),
                ("email", models.EmailField(max_length=254, null=True, unique=True)),
                ("mobile_number", models.CharField(max_length=10, null=True)),
                (
                    "department",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.department",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(default="Student", max_length=50)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("id_number", models.CharField(max_length=20, unique=True)),
                ("registration_date", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")], max_length=6
                    ),
                ),
                ("date_of_birth", models.DateField()),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("mobile_number", models.CharField(max_length=10)),
                ("gpa", models.CharField(default="0.0", max_length=10)),
                ("city", models.CharField(max_length=50)),
                ("country", models.CharField(max_length=50)),
                ("password", models.CharField(default="12345678", max_length=50)),
                (
                    "year",
                    models.IntegerField(
                        choices=[
                            (0, "freshman"),
                            (1, "Year 1"),
                            (2, "Year 2"),
                            (3, "Year 3"),
                            (4, "Year 4"),
                            (5, "Year 5"),
                        ],
                        default="0",
                    ),
                ),
                (
                    "semester",
                    models.IntegerField(
                        choices=[(0, "freshman"), (1, "Semester 1"), (2, "Semester 2")],
                        default="0",
                    ),
                ),
                (
                    "student_class",
                    models.CharField(
                        choices=[
                            ("-", "freshman"),
                            ("A", "Class A"),
                            ("B", "Class B"),
                            ("C", "Class C"),
                            ("D", "Class D"),
                        ],
                        default="-",
                        max_length=1,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.department",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("grade", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.student"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Registrar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_id", models.CharField(max_length=20)),
                ("course_code", models.CharField(max_length=50)),
                ("date_enrolled", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "unique_together": {("student_id", "course_code")},
            },
        ),
        migrations.CreateModel(
            name="Department_head",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(default="abebe", max_length=50)),
                ("last_name", models.CharField(default="beso", max_length=50)),
                (
                    "id_number",
                    models.CharField(default="0012", max_length=20, unique=True),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")],
                        default="male",
                        max_length=6,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        default="department_head@email.com", max_length=254, unique=True
                    ),
                ),
                (
                    "mobile_number",
                    models.CharField(default="0912345678", max_length=10),
                ),
                (
                    "department",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.department",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="course",
            name="department",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="courses",
                to="core.department",
            ),
        ),
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("teacher_id", models.CharField(max_length=20)),
                (
                    "assigned_class",
                    models.CharField(
                        choices=[
                            ("-", "freshman"),
                            ("A", "Class A"),
                            ("B", "Class B"),
                            ("C", "Class C"),
                            ("D", "Class D"),
                        ],
                        default="A",
                        max_length=1,
                    ),
                ),
                ("course_code", models.CharField(max_length=50)),
                ("date_enrolled", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "unique_together": {("teacher_id", "course_code")},
            },
        ),
    ]
